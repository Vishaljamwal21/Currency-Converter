@model CurrencyConverter.Models.CurrencyConvert

@{
    ViewData["Title"] = "Currency Converter";

    var historicalRates = ViewBag.HistoricalRates as Dictionary<string, decimal>;
    var favorites = ViewBag.Favorites as List<CurrencyConverter.Models.FavoriteCurrencyPair>;
}
<h2 class="text-center">@ViewData["Title"]</h2>
<div class="d-flex justify-content-center">
    <div class="col-md-6 col-lg-4">
        <section class="bg-custom-light p-4 rounded-custom shadow-custom">
            <form id="currencyConverterForm" method="post" class="needs-validation" novalidate>
                <div class="form-group">
                    <label for="BaseCurrency">Base Currency</label>
                    <select id="BaseCurrency" name="BaseCurrency" class="form-control">
                        @foreach (var currency in ViewBag.Currencies as Dictionary<string, string>)
                        {
                            <option value="@currency.Key">@currency.Value (@currency.Key)</option>
                        }
                    </select>
                </div>

                <div class="form-group">
                    <label for="TargetCurrency">Target Currency</label>
                    <select id="TargetCurrency" name="TargetCurrency" class="form-control">
                        @foreach (var currency in ViewBag.Currencies as Dictionary<string, string>)
                        {
                            <option value="@currency.Key">@currency.Value (@currency.Key)</option>
                        }
                    </select>
                </div>

                <div class="form-group">
                    <label for="Amount">Amount</label>
                    <input type="number" id="Amount" name="Amount" class="form-control" value="@Model.Amount" min="0.1" step="0.01" required />
                    <div class="invalid-feedback">Please enter a valid amount greater than 0.</div>
                </div>

                <div class="form-group">
                    <label for="ConvertedAmount">Converted Amount</label>
                    <input type="text" id="ConvertedAmount" class="form-control" readonly value="@Model.ConvertedAmount" />
                </div>

                <div class="form-check">
                    <input type="hidden" id="SaveFavoriteHidden" name="SaveFavorite" value="false" />
                    <input type="checkbox" id="SaveFavorite" name="SaveFavorite" class="form-check-input" />
                    <label for="SaveFavorite" class="form-check-label">Save as Favorite</label>
                </div>
                <br />
                <div class="d-flex justify-content-between">
                    <button type="submit" class="btn btn-primary">Convert</button>
                    <button type="button" id="clearButton" class="btn btn-secondary">Clear</button>
                </div>
            </form>

            @if (ViewData["ErrorMessage"] != null)
            {
                <div class="alert alert-danger mt-3">
                    @ViewData["ErrorMessage"]
                </div>
            }
            @if (favorites != null && favorites.Count > 0)
            {
                <section class="mt-4">
                    <h3>Quick Access Favorites</h3>
                    <ul class="list-group">
                        @foreach (var favorite in favorites)
                        {
                            <li class="list-group-item d-flex justify-content-between align-items-center">
                                @favorite.BaseCurrency - @favorite.TargetCurrency
                                <button class="btn btn-primary p-0" onclick="setFavorite('@favorite.BaseCurrency', '@favorite.TargetCurrency')">Use</button>
                            </li>
                        }
                    </ul>
                </section>
            }
            @if (historicalRates != null && historicalRates.Count > 0)
            {
                <section class="mt-4">
                    <h3>Historical Exchange Rates (Today)</h3>
                    <ul class="list-group">
                        @foreach (var rate in historicalRates)
                        {
                            <li class="list-group-item d-flex justify-content-between align-items-center">
                                @rate.Key - @rate.Value
                            </li>
                        }
                    </ul>
                </section>
            }
        </section>
    </div>
</div>
@section Scripts {
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script>
        $(document).ready(function () {
            $('#currencyConverterForm').on('submit', function (e) {
                e.preventDefault();

                var form = $(this)[0];
                if (form.checkValidity() === false) {
                    e.stopPropagation();
                    $(this).addClass('was-validated');
                    return;
                }

                var amount = $('#Amount').val();
                var formData = $(this).serialize();
                var saveFavorite = $('#SaveFavorite').is(':checked');
                formData += '&SaveFavorite=' + (saveFavorite ? 'true' : 'false');

                $.ajax({
                    url: '@Url.Action("Convert", "CurrencyConverter")',
                    type: 'POST',
                    data: formData,
                    success: function (response) {
                        if (response.success) {
                            $('#ConvertedAmount').val(response.convertedAmount.toFixed(2));
                            $('#ConvertedAmount').show();
                        } else {
                            alert(response.errorMessage);
                            $('#ConvertedAmount').val('');
                        }
                    },
                    error: function () {
                        alert('An error occurred. Please try again.');
                        $('#ConvertedAmount').val('');
                    }
                });
            });

            $('#clearButton').on('click', function () {
                $('#currencyConverterForm')[0].reset();
                $('#ConvertedAmount').val('');
                $('#ConvertedAmount').hide(); 
                $('#currencyConverterForm').removeClass('was-validated');
            });

            $('#Amount, #BaseCurrency, #TargetCurrency').on('change', function () {
                var amount = $('#Amount').val();
                var baseCurrency = $('#BaseCurrency').val();
                var targetCurrency = $('#TargetCurrency').val();

                if (amount && baseCurrency && targetCurrency) {
                    $.ajax({
                        url: '@Url.Action("GetExchangeRate", "CurrencyConverter")',
                        type: 'GET',
                        data: { baseCurrency: baseCurrency, targetCurrency: targetCurrency },
                        success: function (response) {
                            if (response.error) {
                                $('#ConvertedAmount').val('Error');
                            } else {
                                var convertedAmount = amount * response.rate;
                                $('#ConvertedAmount').val(convertedAmount.toFixed(2));
                            }
                        }
                    });
                }
            });

            $('#SaveFavorite').on('change', function () {
                $('#SaveFavoriteHidden').val($(this).is(':checked') ? 'true' : 'false');
            });

            $('#ConvertedAmount').hide();
        });

        function setFavorite(baseCurrency, targetCurrency) {
            $('#BaseCurrency').val(baseCurrency).trigger('change');
            $('#TargetCurrency').val(targetCurrency).trigger('change');
        }
    </script>
    <partial name="_ValidationScriptsPartial" />
}

