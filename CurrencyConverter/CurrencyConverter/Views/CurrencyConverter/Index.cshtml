@model CurrencyConverter.Models.CurrencyConvert

@{
    ViewData["Title"] = "Currency Converter";
}

<h2>@ViewData["Title"]</h2>

<form id="currencyConverterForm" method="post">
    <div class="form-group">
        <label for="BaseCurrency">Base Currency</label>
        <select id="BaseCurrency" name="BaseCurrency" class="form-control">
        </select>
    </div>

    <div class="form-group">
        <label for="TargetCurrency">Target Currency</label>
        <select id="TargetCurrency" name="TargetCurrency" class="form-control">
        </select>
    </div>

    <div class="form-group">
        <label for="Amount">Amount</label>
        <input type="number" id="Amount" name="Amount" class="form-control" value="@Model.Amount" />
    </div>

    <div class="form-group">
        <label for="ConvertedAmount">Converted Amount</label>
        <input type="text" id="ConvertedAmount" class="form-control" readonly value="@Model.ConvertedAmount" />
    </div>

    <div class="form-check">
        <input type="checkbox" id="SaveFavorite" name="SaveFavorite" class="form-check-input" />
        <label for="SaveFavorite" class="form-check-label">Save as Favorite</label>
    </div>

    <button type="submit" class="btn btn-primary">Convert</button>
</form>

@if (ViewData["ErrorMessage"] != null)
{
    <div class="alert alert-danger mt-3">
        @ViewData["ErrorMessage"]
    </div>
}

@section Scripts {
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script>
        $(document).ready(function () {
            $.getJSON('@Url.Action("GetCountries", "CurrencyConverter")', function (data) {
                var baseCurrencySelect = $('#BaseCurrency');
                var targetCurrencySelect = $('#TargetCurrency');

                baseCurrencySelect.empty(); 
                targetCurrencySelect.empty(); 

                $.each(data, function (index, item) {
                    var option = $('<option></option>')
                        .attr('value', item.Code)
                        .text(item.Name + ' (' + item.Code + ')');

                    baseCurrencySelect.append(option.clone());
                    targetCurrencySelect.append(option);
                });
            }).fail(function () {
                alert('Failed to load currencies.');
            });

            $('#currencyConverterForm').on('submit', function (e) {
                e.preventDefault();

                var form = $(this);
                var formData = form.serialize();
                var saveFavorite = $('#SaveFavorite').is(':checked');
                formData += '&SaveFavorite=' + (saveFavorite ? 'true' : 'false');

                $.ajax({
                    url: '@Url.Action("Convert", "CurrencyConverter")',
                    type: 'POST',
                    data: formData,
                    success: function (response) {
                        if (response.success) {
                            $('#ConvertedAmount').val(response.convertedAmount.toFixed(2));
                        } else {
                            alert(response.errorMessage);
                        }
                    },
                    error: function () {
                        alert('An error occurred. Please try again.');
                    }
                });
            });


            $('#Amount, #BaseCurrency, #TargetCurrency').on('change', function () {
                var amount = $('#Amount').val();
                var baseCurrency = $('#BaseCurrency').val();
                var targetCurrency = $('#TargetCurrency').val();

                if (amount && baseCurrency && targetCurrency) {
                    $.ajax({
                        url: '@Url.Action("GetExchangeRate", "CurrencyConverter")',
                        type: 'GET',
                        data: { baseCurrency: baseCurrency, targetCurrency: targetCurrency },
                        success: function (response) {
                            if (response.error) {
                                $('#ConvertedAmount').val('Error');
                            } else {
                                var convertedAmount = amount * response.rate;
                                $('#ConvertedAmount').val(convertedAmount.toFixed(2));
                            }
                        }
                    });
                }
            });
        });
    </script>
    <partial name="_ValidationScriptsPartial" />
}
